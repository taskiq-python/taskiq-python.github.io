import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as r,c as l,b as e,d as t,e as s,a as i}from"./app-Lulzgzf0.js";const d={},u=e("h1",{id:"contribution-guide",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#contribution-guide"},[e("span",null,"Contribution guide")])],-1),c=e("p",null,"We love contributions. This guide is for all folks who want to make taskiq better together. We have several rules for contributors:",-1),p=e("ul",null,[e("li",null,"Please do not add malware."),e("li",null,"Please make sure that your request solves the problem.")],-1),h={href:"https://github.com/orgs/taskiq-python/discussions",target:"_blank",rel:"noopener noreferrer"},m=e("p",null,"We have lots of tests in CI. But since CI runs from first-time contributors should be approved, you better test locally. It just takes less time to prepare PR for merging.",-1),g=e("h2",{id:"setting-up-environment",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setting-up-environment"},[e("span",null,"Setting up environment")])],-1),b={href:"https://python-poetry.org/docs/",target:"_blank",rel:"noopener noreferrer"},v=i(`<p>After you have cloned the taskiq repo, install dependencies using this command:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>poetry <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),f=e("code",null,"pyenv",-1),y={href:"https://github.com/pyenv/pyenv",target:"_blank",rel:"noopener noreferrer"},_=i(`<p>After pyenv is ready, you can install all python versions using this command:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pyenv <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="linting" tabindex="-1"><a class="header-anchor" href="#linting"><span>Linting</span></a></h2><p>We have <code>pre-commit</code> configured with all our settings. We highly recommend you to install it as a git hook using <code>pre-commit install</code> command.</p><p>But even without installation, you can run all lints manually:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pre-commit run <span class="token parameter variable">-a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="testing" tabindex="-1"><a class="header-anchor" href="#testing"><span>Testing</span></a></h2><p>You can run <code>pytest</code> without any parameters and it will do the thing.</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pytest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,9),k=e("code",null,"-n",-1),w={href:"https://pypi.org/project/pytest-xdist/",target:"_blank",rel:"noopener noreferrer"},x=i(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pytest <span class="token parameter variable">-n</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Also we use <code>tox</code> to test against different environments. You can publish a PR to run pytest with different python versions, but if you want to do it locally, just run <code>tox</code> command.</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>tox
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Tox assumes that you&#39;ve installed python versions using pyenv with command above.</p>`,4);function T(q,P){const n=o("ExternalLinkIcon");return r(),l("div",null,[u,c,p,e("p",null,[t("If you struggle with something or feel frustrated, you either create an issue, create a "),e("a",h,[t("discussions"),s(n)]),t(". page or publish a draft PR and ask your question in the description.")]),m,g,e("p",null,[t("We use poetry for managing dependencies. To install it, please follow the official guide in "),e("a",b,[t("documentation"),s(n)]),t(".")]),v,e("p",null,[t("It will install all required dependencies. If you want to run pytest against different python environments, please install "),f,t(" using instructions from its "),e("a",y,[t("readme"),s(n)]),t(".")]),_,e("p",null,[t("If you want to speedup testings, you can run it with "),k,t(" option from "),e("a",w,[t("pytest-xdist"),s(n)]),t(" to run tests in parallel.")]),x])}const C=a(d,[["render",T],["__file","contrib.html.vue"]]),S=JSON.parse('{"path":"/contrib.html","title":"Contribution guide","lang":"en-US","frontmatter":{"order":5,"description":"Contribution guide We love contributions. This guide is for all folks who want to make taskiq better together. We have several rules for contributors: Please do not add malware....","head":[["meta",{"property":"og:url","content":"https://taskiq-python.github.io/contrib.html"}],["meta",{"property":"og:site_name","content":"Taskiq"}],["meta",{"property":"og:title","content":"Contribution guide"}],["meta",{"property":"og:description","content":"Contribution guide We love contributions. This guide is for all folks who want to make taskiq better together. We have several rules for contributors: Please do not add malware...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-02-05T23:36:31.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-05T23:36:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Contribution guide\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-05T23:36:31.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Setting up environment","slug":"setting-up-environment","link":"#setting-up-environment","children":[]},{"level":2,"title":"Linting","slug":"linting","link":"#linting","children":[]},{"level":2,"title":"Testing","slug":"testing","link":"#testing","children":[]}],"git":{"createdTime":1707176191000,"updatedTime":1707176191000,"contributors":[{"name":"Pavel Kirilin","email":"win10@list.ru","commits":1}]},"filePathRelative":"contrib.md","localizedDate":"February 5, 2024","autoDesc":true,"excerpt":"\\n<p>We love contributions. This guide is for all folks who want to make taskiq better together.\\nWe have several rules for contributors:</p>\\n<ul>\\n<li>Please do not add malware.</li>\\n<li>Please make sure that your request solves the problem.</li>\\n</ul>\\n<p>If you struggle with something or feel frustrated, you either create an issue, create a <a href=\\"https://github.com/orgs/taskiq-python/discussions\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">discussions</a>.\\npage or publish a draft PR and ask your question in the description.</p>"}');export{C as comp,S as data};
