import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as p,c as u,e as o,w as a,b as s,d as n,a as d}from"./app-e0971bfc.js";const k={},m=s("h1",{id:"taskiq-message-format",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#taskiq-message-format","aria-hidden":"true"},"#"),n(" Taskiq message format")],-1),b=s("p",null,"Taskiq doesn't force you to use any specific message format. We define default message format, but you can use any format you want.",-1),h=s("p",null,"The default message format is:",-1),v=s("div",{class:"language-json line-numbers-mode","data-ext":"json"},[s("pre",{class:"language-json"},[s("code",null,[s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token property"},'"task_name"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"my_project.module1.task"'),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"args"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"["),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token number"},"3"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"kwargs"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),s("span",{class:"token property"},'"a"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token property"},'"b"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token property"},'"c"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token number"},"3"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"labels"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token property"},'"label1"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"value1"'),s("span",{class:"token punctuation"},","),n(`
        `),s("span",{class:"token property"},'"label2"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"value2"'),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),g=s("div",{class:"language-json line-numbers-mode","data-ext":"json"},[s("pre",{class:"language-json"},[s("code",null,[s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token property"},'"properties"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token property"},'"task_id"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),n(`
      `),s("span",{class:"token property"},'"title"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"Task Id"'),s("span",{class:"token punctuation"},","),n(`
      `),s("span",{class:"token property"},'"type"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"string"'),n(`
    `),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"task_name"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),n(`
      `),s("span",{class:"token property"},'"title"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"Name of the task"'),s("span",{class:"token punctuation"},","),n(`
      `),s("span",{class:"token property"},'"type"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"string"'),n(`
    `),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"labels"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),n(`
      `),s("span",{class:"token property"},'"title"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"Additional labels"'),s("span",{class:"token punctuation"},","),n(`
      `),s("span",{class:"token property"},'"type"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"object"'),n(`
    `),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"args"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),n(`
      `),s("span",{class:"token property"},'"items"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},","),n(`
      `),s("span",{class:"token property"},'"title"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"Arguments"'),s("span",{class:"token punctuation"},","),n(`
      `),s("span",{class:"token property"},'"type"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"array"'),n(`
    `),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token property"},'"kwargs"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"{"),n(`
      `),s("span",{class:"token property"},'"title"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"Keyword arguments"'),s("span",{class:"token punctuation"},","),n(`
      `),s("span",{class:"token property"},'"type"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"object"'),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`
  `),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},","),n(`
  `),s("span",{class:"token property"},'"required"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token punctuation"},"["),n(`
    `),s("span",{class:"token string"},'"task_id"'),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token string"},'"task_name"'),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token string"},'"labels"'),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token string"},'"args"'),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token string"},'"kwargs"'),n(`
  `),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},","),n(`
  `),s("span",{class:"token property"},'"type"'),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},'"object"'),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),f=s("p",null,"But this can be easily changed by creating your own implementation of the TaskiqFormatter class or TaskiqSerializer class.",-1),y=s("h3",{id:"serializers",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#serializers","aria-hidden":"true"},"#"),n(" Serializers")],-1),_=s("p",null,"Serializers define the format of the message but not the structure. For example, if you want to use msgpack or ORJson to serialize your message, you should update the serializer of your broker.",-1),z=s("p",null,"Be default, Taskiq uses JSON serializer. But we also have some implementations of other serializers:",-1),x={href:"https://pypi.org/project/orjson/",target:"_blank",rel:"noopener noreferrer"},j={href:"https://pypi.org/project/msgpack/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://pypi.org/project/cbor2/",target:"_blank",rel:"noopener noreferrer"},q=s("p",null,[n("To define your own serializer, you have to subclass the TaskiqSerializer class and implement "),s("code",null,"dumpb"),n(" and "),s("code",null,"loadb"),n(" methods. You can take a look at the existing implementations from the "),s("code",null,"taskiq.serializers"),n(" module.")],-1),S=s("p",null,"To install taskiq with libraries for non-JSON serializers, you should install taskiq with extras.",-1),T=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[n("pip "),s("span",{class:"token function"},"install"),n(),s("span",{class:"token string"},'"taskiq[orjson]"'),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1),A=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[n("pip "),s("span",{class:"token function"},"install"),n(),s("span",{class:"token string"},'"taskiq[msgpack]"'),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1),N=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[n("pip "),s("span",{class:"token function"},"install"),n(),s("span",{class:"token string"},'"taskiq[cbor]"'),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1),B=d('<h3 id="formatters" tabindex="-1"><a class="header-anchor" href="#formatters" aria-hidden="true">#</a> Formatters</h3><p>Formatters define the format of the message. It might be useful if you&#39;d like to send a task to a celery worker for a different project. You can do it in seriazier as well, but formatters give you correct type hints.</p><p>By default we use a formatter that dumps the message to dict and serializes it using serializer. But you can define your own formatter to send a message in any format you want. To define a new formatter, you have to subclass the TaskiqFormatter class and implement <code>dumps</code> and <code>loads</code> methods. As an example, you can take a look at the <code>JSONFormatter</code> from <code>taskiq.formatters</code> implementation.</p>',3);function O(F,I){const r=i("Tabs"),l=i("ExternalLinkIcon");return p(),u("div",null,[m,b,h,o(r,{id:"9",data:[{id:"example"},{id:"json schema"}]},{title0:a(({value:e,isActive:t})=>[n("example")]),title1:a(({value:e,isActive:t})=>[n("json schema")]),tab0:a(({value:e,isActive:t})=>[v]),tab1:a(({value:e,isActive:t})=>[g]),_:1}),f,y,_,z,s("ul",null,[s("li",null,[n("ORJSONSerializer - faster "),s("a",x,[n("JSON implementation"),o(l)]),n(". Also, it supports datetime and UUID serialization.")]),s("li",null,[n("MSGPackSerializer - "),s("a",j,[n("MsgPack"),o(l)]),n(" format serializer. It might be useful to send less data over the network.")]),s("li",null,[n("CBORSerializer - "),s("a",w,[n("CBOR"),o(l)]),n(" format serializer. It is also has a smaller size than JSON.")])]),q,S,o(r,{id:"52",data:[{id:"orjson"},{id:"msgpack"},{id:"cbor"}]},{title0:a(({value:e,isActive:t})=>[n("orjson")]),title1:a(({value:e,isActive:t})=>[n("msgpack")]),title2:a(({value:e,isActive:t})=>[n("cbor")]),tab0:a(({value:e,isActive:t})=>[T]),tab1:a(({value:e,isActive:t})=>[A]),tab2:a(({value:e,isActive:t})=>[N]),_:1}),B])}const R=c(k,[["render",O],["__file","message-format.html.vue"]]);export{R as default};
