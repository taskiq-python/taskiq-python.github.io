import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as a,a as e}from"./app-Lulzgzf0.js";const t={},o=e(`<h1 id="schedule-source" tabindex="-1"><a class="header-anchor" href="#schedule-source"><span>Schedule source</span></a></h1><p>Schedule sources are used to get schedule for tasks. To create new <code>schedule source</code> you have to implement the <code>taskiq.abc.schedule_source.ScheduleSource</code> abstract class.</p><p>Here&#39;s a minimal example of a schedule source:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> typing <span class="token keyword">import</span> List

<span class="token keyword">from</span> taskiq <span class="token keyword">import</span> ScheduledTask<span class="token punctuation">,</span> ScheduleSource


<span class="token keyword">class</span> <span class="token class-name">MyScheduleSource</span><span class="token punctuation">(</span>ScheduleSource<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">startup</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;Do something when starting broker.&quot;&quot;&quot;</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">shutdown</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;Do something on shutdown.&quot;&quot;&quot;</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">get_schedules</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> List<span class="token punctuation">[</span><span class="token string">&quot;ScheduledTask&quot;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token comment"># Here you must return list of scheduled tasks from your source.</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
            ScheduledTask<span class="token punctuation">(</span>
                task_name<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
                labels<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                args<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                kwargs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                cron<span class="token operator">=</span><span class="token string">&quot;* * * * *&quot;</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span>

    <span class="token comment"># This method is optional. You may not implement this.</span>
    <span class="token comment"># It&#39;s just a helper to people to be able to interact with your source.</span>
    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">add_schedule</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> schedule<span class="token punctuation">:</span> <span class="token string">&quot;ScheduledTask&quot;</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;New schedule added:&quot;</span><span class="token punctuation">,</span> schedule<span class="token punctuation">)</span>

    <span class="token comment"># This method is completely optional, but if you want to support</span>
    <span class="token comment"># schedule cancelation, you must implement it.</span>
    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">delete_schedule</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> schedule_id<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Deleting schedule:&quot;</span><span class="token punctuation">,</span> schedule_id<span class="token punctuation">)</span>

    <span class="token comment"># This method is optional. You may not implement this.</span>
    <span class="token comment"># It&#39;s just a helper to people to be able to interact with your source.</span>
    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">pre_send</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> task<span class="token punctuation">:</span> <span class="token string">&quot;ScheduledTask&quot;</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        Actions to execute before task will be sent to broker.

        This method may raise ScheduledTaskCancelledError.
        This cancels the task execution.

        :param task: task that will be sent
        &quot;&quot;&quot;</span>

    <span class="token comment"># This method is optional. You may not implement this.</span>
    <span class="token comment"># It&#39;s just a helper to people to be able to interact with your source.</span>
    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">post_send</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> task<span class="token punctuation">:</span> <span class="token string">&quot;ScheduledTask&quot;</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        Actions to execute after task was sent to broker.

        :param task: task that just have sent
        &quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can implement a schedule source that write schedules in the database and have delayed tasks in runtime.</p>`,5),p=[o];function c(l,u){return n(),a("div",null,p)}const k=s(t,[["render",c],["__file","schedule-sources.html.vue"]]),d=JSON.parse(`{"path":"/extending-taskiq/schedule-sources.html","title":"Schedule source","lang":"en-US","frontmatter":{"order":5,"description":"Schedule source Schedule sources are used to get schedule for tasks. To create new schedule source you have to implement the taskiq.abc.schedule_source.ScheduleSource abstract c...","head":[["meta",{"property":"og:url","content":"https://taskiq-python.github.io/extending-taskiq/schedule-sources.html"}],["meta",{"property":"og:site_name","content":"Taskiq"}],["meta",{"property":"og:title","content":"Schedule source"}],["meta",{"property":"og:description","content":"Schedule source Schedule sources are used to get schedule for tasks. To create new schedule source you have to implement the taskiq.abc.schedule_source.ScheduleSource abstract c..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-02-05T23:36:31.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-05T23:36:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Schedule source\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-05T23:36:31.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1707176191000,"updatedTime":1707176191000,"contributors":[{"name":"Pavel Kirilin","email":"win10@list.ru","commits":1}]},"filePathRelative":"extending-taskiq/schedule-sources.md","localizedDate":"February 5, 2024","autoDesc":true,"excerpt":"\\n<p>Schedule sources are used to get schedule for tasks.\\nTo create new <code>schedule source</code> you have to implement the <code>taskiq.abc.schedule_source.ScheduleSource</code> abstract class.</p>\\n<p>Here's a minimal example of a schedule source:</p>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">from</span> typing <span class=\\"token keyword\\">import</span> List\\n\\n<span class=\\"token keyword\\">from</span> taskiq <span class=\\"token keyword\\">import</span> ScheduledTask<span class=\\"token punctuation\\">,</span> ScheduleSource\\n\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">MyScheduleSource</span><span class=\\"token punctuation\\">(</span>ScheduleSource<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">startup</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Do something when starting broker.\\"\\"\\"</span>\\n\\n    <span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">shutdown</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Do something on shutdown.\\"\\"\\"</span>\\n\\n    <span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">get_schedules</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> List<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"ScheduledTask\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token comment\\"># Here you must return list of scheduled tasks from your source.</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">[</span>\\n            ScheduledTask<span class=\\"token punctuation\\">(</span>\\n                task_name<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">,</span>\\n                labels<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n                args<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n                kwargs<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n                cron<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"* * * * *\\"</span><span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token punctuation\\">]</span>\\n\\n    <span class=\\"token comment\\"># This method is optional. You may not implement this.</span>\\n    <span class=\\"token comment\\"># It's just a helper to people to be able to interact with your source.</span>\\n    <span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">add_schedule</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> schedule<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"ScheduledTask\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"New schedule added:\\"</span><span class=\\"token punctuation\\">,</span> schedule<span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token comment\\"># This method is completely optional, but if you want to support</span>\\n    <span class=\\"token comment\\"># schedule cancelation, you must implement it.</span>\\n    <span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">delete_schedule</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> schedule_id<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Deleting schedule:\\"</span><span class=\\"token punctuation\\">,</span> schedule_id<span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token comment\\"># This method is optional. You may not implement this.</span>\\n    <span class=\\"token comment\\"># It's just a helper to people to be able to interact with your source.</span>\\n    <span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">pre_send</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> task<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"ScheduledTask\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"\\n        Actions to execute before task will be sent to broker.\\n\\n        This method may raise ScheduledTaskCancelledError.\\n        This cancels the task execution.\\n\\n        :param task: task that will be sent\\n        \\"\\"\\"</span>\\n\\n    <span class=\\"token comment\\"># This method is optional. You may not implement this.</span>\\n    <span class=\\"token comment\\"># It's just a helper to people to be able to interact with your source.</span>\\n    <span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">post_send</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> task<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"ScheduledTask\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"\\n        Actions to execute after task was sent to broker.\\n\\n        :param task: task that just have sent\\n        \\"\\"\\"</span>\\n</code></pre></div>"}`);export{k as comp,d as data};
