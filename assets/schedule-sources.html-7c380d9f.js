import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,a as e}from"./app-d3ed1abe.js";const t={},o=e(`<h1 id="available-schedule-sources" tabindex="-1"><a class="header-anchor" href="#available-schedule-sources" aria-hidden="true">#</a> Available schedule sources</h1><p>These objects are used to fetch current schedule for tasks. Currently we have only one schedule source.</p><h2 id="labelschedulesource" tabindex="-1"><a class="header-anchor" href="#labelschedulesource" aria-hidden="true">#</a> LabelScheduleSource</h2><p>This source parses labels of tasks, and if it finds a <code>schedule</code> label, it considers this task as scheduled.</p><p>The format of the schedule label is the following:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@broker<span class="token punctuation">.</span>task</span><span class="token punctuation">(</span>
    schedule<span class="token operator">=</span><span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token string">&quot;cron&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;* * * * *&quot;</span><span class="token punctuation">,</span> <span class="token comment"># type: str, required argument.</span>
            <span class="token string">&quot;args&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment"># type List[Any] | None, can be omitted.</span>
            <span class="token string">&quot;kwargs&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment"># type: Dict[str, Any] | None, can be omitted.</span>
            <span class="token string">&quot;labels&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment"># type: Dict[str, Any] | None, can be omitted.</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">my_task</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Parameters:</p><ul><li><code>cron</code> - crontab string when to run the task.</li><li><code>args</code> - args to use, when invoking the task.</li><li><code>kwargs</code> - key-word arguments to use when invoking the task.</li><li><code>labels</code> - additional labels to use when invoking the task.</li></ul><p>Usage:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> taskiq<span class="token punctuation">.</span>scheduler <span class="token keyword">import</span> TaskiqScheduler
<span class="token keyword">from</span> taskiq<span class="token punctuation">.</span>schedule_sources <span class="token keyword">import</span> LabelScheduleSource

broker <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

scheduler <span class="token operator">=</span> TaskiqScheduler<span class="token punctuation">(</span>
    broker<span class="token operator">=</span>broker<span class="token punctuation">,</span>
    sources<span class="token operator">=</span><span class="token punctuation">[</span>LabelScheduleSource<span class="token punctuation">(</span>broker<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">Cool notice!</p><p>In order to resolve all labels correctly, don&#39;t forget to import all task modules using CLI interface.</p></div>`,11),c=[o];function p(l,i){return s(),a("div",null,c)}const d=n(t,[["render",p],["__file","schedule-sources.html.vue"]]);export{d as default};
