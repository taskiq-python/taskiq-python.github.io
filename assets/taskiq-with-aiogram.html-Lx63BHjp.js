import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as i,c as p,b as n,d as s,e as t,a as c}from"./app-Lulzgzf0.js";const l={},r=n("h1",{id:"taskiq-aiogram",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#taskiq-aiogram"},[n("span",null,"Taskiq + Aiogram")])],-1),u={href:"https://github.com/taskiq-python/taskiq-aiogram",target:"_blank",rel:"noopener noreferrer"},d={href:"https://docs.aiogram.dev/en/latest/",target:"_blank",rel:"noopener noreferrer"},k=c(`<p>This integration allows you to easily send delayed messages or run intensive functions without blocking the message handing.</p><p>This integration adds three main dependencies which you can use in your taskiq functions:</p><ul><li><code>aiogram.Bot</code> - the bot instance that you can use to send messages or perform other actions. If multiple bots listen to the same dispatcher, this dependency will be resolved to the latest bot passed in the <code>taskiq_aiogram.init</code> function.</li><li><code>aiogram.Dispatcher</code> - current dispatcher instance.</li><li><code>List[aiogram.Bot]</code> - list of all bots that were passed to the <code>taskiq_aiogram.init</code> function.</li></ul><p>To enable the integration, please install the <code>taskiq-aiogram</code> library:</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token string">&quot;taskiq-aiogram&quot;</span>
</code></pre></div><p>After the installation is complete, add an initialization function call to your broker&#39;s main file so it becomes something like this:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="tkq.py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio

<span class="token keyword">import</span> taskiq_aiogram
<span class="token keyword">from</span> aiogram <span class="token keyword">import</span> Bot
<span class="token keyword">from</span> taskiq <span class="token keyword">import</span> TaskiqDepends
<span class="token keyword">from</span> taskiq_redis <span class="token keyword">import</span> ListQueueBroker

broker <span class="token operator">=</span> ListQueueBroker<span class="token punctuation">(</span><span class="token string">&quot;redis://localhost&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># This line is going to initialize everything.</span>
taskiq_aiogram<span class="token punctuation">.</span>init<span class="token punctuation">(</span>
    broker<span class="token punctuation">,</span>
    <span class="token comment"># This is path to the dispatcher.</span>
    <span class="token string">&quot;bot:dp&quot;</span><span class="token punctuation">,</span>
    <span class="token comment"># This is path to the bot instance.</span>
    <span class="token string">&quot;bot:bot&quot;</span><span class="token punctuation">,</span>
    <span class="token comment"># You can specify more bots here.</span>
<span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@broker<span class="token punctuation">.</span>task</span><span class="token punctuation">(</span>task_name<span class="token operator">=</span><span class="token string">&quot;my_task&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">my_task</span><span class="token punctuation">(</span>chat_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> bot<span class="token punctuation">:</span> Bot <span class="token operator">=</span> TaskiqDepends<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;I&#39;m a task&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> bot<span class="token punctuation">.</span>send_message<span class="token punctuation">(</span>chat_id<span class="token punctuation">,</span> <span class="token string">&quot;task completed&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Let&#39;s see how to use this integration.</p><div class="language-python line-numbers-mode" data-ext="py" data-title="bot.py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> logging
<span class="token keyword">import</span> sys

<span class="token keyword">from</span> aiogram <span class="token keyword">import</span> Bot<span class="token punctuation">,</span> Dispatcher<span class="token punctuation">,</span> types
<span class="token keyword">from</span> aiogram<span class="token punctuation">.</span>filters <span class="token keyword">import</span> Command

<span class="token keyword">from</span> tkq <span class="token keyword">import</span> broker<span class="token punctuation">,</span> my_task

dp <span class="token operator">=</span> Dispatcher<span class="token punctuation">(</span><span class="token punctuation">)</span>
bot <span class="token operator">=</span> Bot<span class="token punctuation">(</span>token<span class="token operator">=</span><span class="token string">&quot;TOKEN&quot;</span><span class="token punctuation">)</span>


<span class="token comment"># Taskiq calls this function when starting the worker.</span>
<span class="token decorator annotation punctuation">@dp<span class="token punctuation">.</span>startup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">setup_taskiq</span><span class="token punctuation">(</span>bot<span class="token punctuation">:</span> Bot<span class="token punctuation">,</span> <span class="token operator">*</span>_args<span class="token punctuation">,</span> <span class="token operator">**</span>_kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Here we check if it&#39;s a clien-side,</span>
    <span class="token comment"># Becuase otherwise you&#39;re going to</span>
    <span class="token comment"># create infinite loop of startup events.</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> broker<span class="token punctuation">.</span>is_worker_process<span class="token punctuation">:</span>
        logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;Setting up taskiq&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">await</span> broker<span class="token punctuation">.</span>startup<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token comment"># Taskiq calls this function when shutting down the worker.</span>
<span class="token decorator annotation punctuation">@dp<span class="token punctuation">.</span>shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">shutdown_taskiq</span><span class="token punctuation">(</span>bot<span class="token punctuation">:</span> Bot<span class="token punctuation">,</span> <span class="token operator">*</span>_args<span class="token punctuation">,</span> <span class="token operator">**</span>_kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> broker<span class="token punctuation">.</span>is_worker_process<span class="token punctuation">:</span>
        logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;Shutting down taskiq&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">await</span> broker<span class="token punctuation">.</span>shutdown<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token comment">## Simple command to handle</span>
<span class="token decorator annotation punctuation">@dp<span class="token punctuation">.</span>message</span><span class="token punctuation">(</span>Command<span class="token punctuation">(</span><span class="token string">&quot;task&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">message</span><span class="token punctuation">(</span>message<span class="token punctuation">:</span> types<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> my_task<span class="token punctuation">.</span>kiq<span class="token punctuation">(</span>message<span class="token punctuation">.</span>chat<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span>


<span class="token comment">## Main function that starts the bot.</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> dp<span class="token punctuation">.</span>start_polling<span class="token punctuation">(</span>bot<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    logging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span>level<span class="token operator">=</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">,</span> stream<span class="token operator">=</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span>
    asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That&#39;s it. Now you can easily call tasks from your bots and access bots from within your tasks.</p>`,10);function m(v,g){const a=o("ExternalLinkIcon");return i(),p("div",null,[r,n("p",null,[n("a",u,[s("Taskiq-Aiogram"),t(a)]),s(" is a nice integration with one of the best telegram bot libraries - "),n("a",d,[s("aiogram"),t(a)]),s(".")]),k])}const y=e(l,[["render",m],["__file","taskiq-with-aiogram.html.vue"]]),w=JSON.parse('{"path":"/framework_integrations/taskiq-with-aiogram.html","title":"Taskiq + Aiogram","lang":"en-US","frontmatter":{"description":"Taskiq + Aiogram Taskiq-Aiogram is a nice integration with one of the best telegram bot libraries - aiogram. This integration allows you to easily send delayed messages or run i...","head":[["meta",{"property":"og:url","content":"https://taskiq-python.github.io/framework_integrations/taskiq-with-aiogram.html"}],["meta",{"property":"og:site_name","content":"Taskiq"}],["meta",{"property":"og:title","content":"Taskiq + Aiogram"}],["meta",{"property":"og:description","content":"Taskiq + Aiogram Taskiq-Aiogram is a nice integration with one of the best telegram bot libraries - aiogram. This integration allows you to easily send delayed messages or run i..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-02-05T23:36:31.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-05T23:36:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Taskiq + Aiogram\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-05T23:36:31.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1707176191000,"updatedTime":1707176191000,"contributors":[{"name":"Pavel Kirilin","email":"win10@list.ru","commits":1}]},"filePathRelative":"framework_integrations/taskiq-with-aiogram.md","localizedDate":"February 5, 2024","autoDesc":true,"excerpt":"\\n<p><a href=\\"https://github.com/taskiq-python/taskiq-aiogram\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Taskiq-Aiogram</a> is a nice integration with one of the best telegram bot libraries - <a href=\\"https://docs.aiogram.dev/en/latest/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">aiogram</a>.</p>\\n<p>This integration allows you to easily send delayed messages or run intensive functions without blocking the message handing.</p>"}');export{y as comp,w as data};
