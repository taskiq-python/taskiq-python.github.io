import{_ as t,W as o,X as p,Z as n,a1 as s,$ as e,Y as i,v as c}from"./framework-324439bb.js";const l={},r=n("h1",{id:"taskiq-fastapi",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#taskiq-fastapi","aria-hidden":"true"},"#"),s(" Taskiq + FastAPI")],-1),u=n("p",null,"FastAPI is one of the most popular async web frameworks in python. It has gained it's popularity because of two things:",-1),d=n("ol",null,[n("li",null,"It's easy to use;"),n("li",null,"It has a cool dependency injection.")],-1),k={href:"https://pypi.org/project/taskiq-fastapi/",target:"_blank",rel:"noopener noreferrer"},v=i(`<p>Let&#39;s see what we got here. In this library, we provide you with only one public function called <code>init</code>. It takes a broker and a string path (as in uvicorn) to the fastapi application (or factory function). This function must be called in your main broker file.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> taskiq <span class="token keyword">import</span> ZeroMQBroker
<span class="token keyword">import</span> taskiq_fastapi

broker <span class="token operator">=</span> ZeroMQBroker<span class="token punctuation">(</span><span class="token punctuation">)</span>

taskiq_fastapi<span class="token punctuation">.</span>init<span class="token punctuation">(</span>broker<span class="token punctuation">,</span> <span class="token string">&quot;my_package.application:app&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>There are two rules to make everything work as you expect:</p><ol><li>Add <code>TaskiqDepends</code> as a default value for every parameter with <code>Request</code> or <code>HTTPConnection</code> types in base dependencies.</li><li>Use only <code>TaskiqDepends</code> in tasks.</li></ol><div class="hint-container tip"><p class="hint-container-title">Cool and important note!</p><p>The Request or HTTPConnection that you&#39;ll get injected in your task is not the same request or connection you have had in your handler when you were sending the task!</p></div><p>Many fastapi dependency functions are depend on <code>fastapi.Request</code>. We provide a mocked request to such dependencies. But taskiq cannot resolve dependencies until you explicitly specify that this parameter must be injected.</p><p>As an example. If you previously had a dependency like this:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> Request
<span class="token keyword">from</span> typing <span class="token keyword">import</span> Any

<span class="token keyword">def</span> <span class="token function">get_redis_pool</span><span class="token punctuation">(</span>request<span class="token punctuation">:</span> Request<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Any<span class="token punctuation">:</span>
    <span class="token keyword">return</span> request<span class="token punctuation">.</span>app<span class="token punctuation">.</span>state<span class="token punctuation">.</span>redis_pool

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To make it resolvable in taskiq, you need to make it clear that Request object must be injected. Like this:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> Request
<span class="token keyword">from</span> taskiq <span class="token keyword">import</span> TaskiqDepends


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">get_redis_pool</span><span class="token punctuation">(</span>request<span class="token punctuation">:</span> Request <span class="token operator">=</span> TaskiqDepends<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> request<span class="token punctuation">.</span>app<span class="token punctuation">.</span>state<span class="token punctuation">.</span>redis_pool

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Also you want to call startup of your brokers somewhere.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI
<span class="token keyword">from</span> your_project<span class="token punctuation">.</span>taskiq <span class="token keyword">import</span> broker

app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>on_event</span><span class="token punctuation">(</span><span class="token string">&quot;startup&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">app_startup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> broker<span class="token punctuation">.</span>is_worker_process<span class="token punctuation">:</span>
        <span class="token keyword">await</span> broker<span class="token punctuation">.</span>startup<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>on_event</span><span class="token punctuation">(</span><span class="token string">&quot;shutdown&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">app_shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> broker<span class="token punctuation">.</span>is_worker_process<span class="token punctuation">:</span>
        <span class="token keyword">await</span> broker<span class="token punctuation">.</span>shutdown<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),m={href:"https://github.com/taskiq-python/taskiq-fastapi",target:"_blank",rel:"noopener noreferrer"};function y(h,b){const a=c("ExternalLinkIcon");return o(),p("div",null,[r,u,d,n("p",null,[s(`In taskiq we try to make our libraries easy to use and we too have a depenndency injection. But our dependencies are not compatible with FastAPI's dependencies by default. That is why we have created a library "`),n("a",k,[s("taskiq-fastapi"),e(a)]),s('" to make integration with FastAPI as smooth as possible.')]),v,n("p",null,[s("And that's it. Now you can use your taskiq tasks with functions and classes that depend on FastAPI dependenices. You can find bigger examples in the "),n("a",m,[s("taskiq-fastapi repo"),e(a)]),s(".")])])}const w=t(l,[["render",y],["__file","taskiq-with-fastapi.html.vue"]]);export{w as default};
