import{_ as u}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as d,c as k,b as n,d as s,e,w as a,a as p}from"./app-Lulzgzf0.js";const m={},v=n("h1",{id:"taskiq-fastapi",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#taskiq-fastapi"},[n("span",null,"Taskiq + FastAPI")])],-1),y=n("p",null,"FastAPI is a highly popular async web framework in Python. It has gained its popularity because of two things:",-1),h=n("ol",null,[n("li",null,"It's easy to use;"),n("li",null,"Cool dependency injection.")],-1),b={href:"https://github.com/taskiq-python/taskiq-fastapi",target:"_blank",rel:"noopener noreferrer"},f=p(`<p>Let&#39;s see what we got here. In this library, we provide users with only one public function called <code>init</code>. It takes a broker and a string path (as in uvicorn) to the fastapi application (or factory function). People should call this function in their main broker file.</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> taskiq <span class="token keyword">import</span> ZeroMQBroker
<span class="token keyword">import</span> taskiq_fastapi

broker <span class="token operator">=</span> ZeroMQBroker<span class="token punctuation">(</span><span class="token punctuation">)</span>

taskiq_fastapi<span class="token punctuation">.</span>init<span class="token punctuation">(</span>broker<span class="token punctuation">,</span> <span class="token string">&quot;my_package.application:app&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>There are two rules to make everything work as you expect:</p><ol><li>Add <code>TaskiqDepends</code> as a default value for every parameter with <code>Request</code> or <code>HTTPConnection</code> types in base dependencies. Or if you use <code>Annotated</code>, please annotate these types with <code>TaskiqDepends</code>.</li><li>Use only <code>TaskiqDepends</code> in tasks.</li></ol><div class="hint-container tip"><p class="hint-container-title">Cool and important note!</p><p>The <code>Request</code> or <code>HTTPConnection</code> that you&#39;ll get injected in your task is not the same request or connection you have had in your handler when you were sending the task!</p></div><p>Many fastapi dependency functions depend on <code>fastapi.Request</code>. We provide a mocked request to such dependencies. But taskiq cannot resolve dependencies until you explicitly specify that this parameter must be injected.</p><p>As an example. If you previously had a dependency like this:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> Request
<span class="token keyword">from</span> typing <span class="token keyword">import</span> Any

<span class="token keyword">def</span> <span class="token function">get_redis_pool</span><span class="token punctuation">(</span>request<span class="token punctuation">:</span> Request<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Any<span class="token punctuation">:</span>
    <span class="token keyword">return</span> request<span class="token punctuation">.</span>app<span class="token punctuation">.</span>state<span class="token punctuation">.</span>redis_pool

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To make it resolvable in taskiq, people should mark default fastapi dependencies (such as <code>Request</code> and <code>HTTPConnection</code>) with <code>TaskiqDepends</code>. Like this:</p>`,9),w=n("div",{class:"language-python line-numbers-mode","data-ext":"py","data-title":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"from"),s(" typing "),n("span",{class:"token keyword"},"import"),s(` Annotated
`),n("span",{class:"token keyword"},"from"),s(" fastapi "),n("span",{class:"token keyword"},"import"),s(` Request
`),n("span",{class:"token keyword"},"from"),s(" taskiq "),n("span",{class:"token keyword"},"import"),s(` TaskiqDepends


`),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"get_redis_pool"),n("span",{class:"token punctuation"},"("),s("request"),n("span",{class:"token punctuation"},":"),s(" Annotated"),n("span",{class:"token punctuation"},"["),s("Request"),n("span",{class:"token punctuation"},","),s(" TaskiqDepends"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" request"),n("span",{class:"token punctuation"},"."),s("app"),n("span",{class:"token punctuation"},"."),s("state"),n("span",{class:"token punctuation"},"."),s(`redis_pool

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=n("div",{class:"language-python line-numbers-mode","data-ext":"py","data-title":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"from"),s(" fastapi "),n("span",{class:"token keyword"},"import"),s(` Request
`),n("span",{class:"token keyword"},"from"),s(" taskiq "),n("span",{class:"token keyword"},"import"),s(` TaskiqDepends


`),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"get_redis_pool"),n("span",{class:"token punctuation"},"("),s("request"),n("span",{class:"token punctuation"},":"),s(" Request "),n("span",{class:"token operator"},"="),s(" TaskiqDepends"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" request"),n("span",{class:"token punctuation"},"."),s("app"),n("span",{class:"token punctuation"},"."),s("state"),n("span",{class:"token punctuation"},"."),s(`redis_pool

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_=p(`<p>Also you want to call startup of your brokers somewhere.</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI
<span class="token keyword">from</span> your_project<span class="token punctuation">.</span>taskiq <span class="token keyword">import</span> broker

app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>on_event</span><span class="token punctuation">(</span><span class="token string">&quot;startup&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">app_startup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> broker<span class="token punctuation">.</span>is_worker_process<span class="token punctuation">:</span>
        <span class="token keyword">await</span> broker<span class="token punctuation">.</span>startup<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>on_event</span><span class="token punctuation">(</span><span class="token string">&quot;shutdown&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">app_shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> broker<span class="token punctuation">.</span>is_worker_process<span class="token punctuation">:</span>
        <span class="token keyword">await</span> broker<span class="token punctuation">.</span>shutdown<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),q={href:"https://github.com/taskiq-python/examples/",target:"_blank",rel:"noopener noreferrer"},T=n("h2",{id:"testing",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#testing"},[n("span",null,"Testing")])],-1),I=n("code",null,"InMemoryBroker",-1),x=p(`<p>Let&#39;s imagine that you have a fixture of your application. It returns a new fastapi application to use in tests.</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>
<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>fixture</span>
<span class="token keyword">def</span> <span class="token function">fastapi_app</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> FastAPI<span class="token punctuation">:</span>
    <span class="token keyword">return</span> get_app<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Right after this fixture, we define another one.</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> taskiq_fastapi


<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>fixture</span><span class="token punctuation">(</span>autouse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">init_taskiq_deps</span><span class="token punctuation">(</span>fastapi_app<span class="token punctuation">:</span> FastAPI<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># This is important part. Here we add dependency context,</span>
    <span class="token comment"># this thing helps in resolving dependencies for tasks</span>
    <span class="token comment"># for inmemory broker.</span>
    taskiq_fastapi<span class="token punctuation">.</span>populate_dependency_context<span class="token punctuation">(</span>broker<span class="token punctuation">,</span> fastapi_app<span class="token punctuation">)</span>

    <span class="token keyword">yield</span>

    broker<span class="token punctuation">.</span>custom_dependency_context <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This fixture has autouse flag, which means it would run on every test automatically.</p>`,5);function A(P,F){const c=i("ExternalLinkIcon"),l=i("Tabs"),r=i("RouteLink");return d(),k("div",null,[v,y,h,n("p",null,[s('In taskiq, we try to make our libraries easy to use, and We have a dependency injection too. So we have created the library "'),n("a",b,[s("taskiq-fastapi"),e(c)]),s('" to make integration with FastAPI as smooth as possible.')]),f,e(l,{id:"55",data:[{id:"Annotated 3.10+"},{id:"default values"}]},{title0:a(({value:t,isActive:o})=>[s("Annotated 3.10+")]),title1:a(({value:t,isActive:o})=>[s("default values")]),tab0:a(({value:t,isActive:o})=>[w]),tab1:a(({value:t,isActive:o})=>[g]),_:1}),_,n("p",null,[s("And that's it. Now you can use your taskiq tasks with functions and classes that depend on FastAPI dependenices. You can find bigger examples in the "),n("a",q,[s("examples repo"),e(c)]),s(".")]),T,n("p",null,[s("Testing is no different from general testing advice from articles about "),e(r,{to:"/guide/testing-taskiq.html"},{default:a(()=>[s("testing")]),_:1}),s(". But if you use "),I,s(" in your tests, you need to provide it with a custom dependency context because it doesn't run as a worker process.")]),x])}const C=u(m,[["render",A],["__file","taskiq-with-fastapi.html.vue"]]),D=JSON.parse(`{"path":"/framework_integrations/taskiq-with-fastapi.html","title":"Taskiq + FastAPI","lang":"en-US","frontmatter":{"order":1,"description":"Taskiq + FastAPI FastAPI is a highly popular async web framework in Python. It has gained its popularity because of two things: It's easy to use; Cool dependency injection. In t...","head":[["meta",{"property":"og:url","content":"https://taskiq-python.github.io/framework_integrations/taskiq-with-fastapi.html"}],["meta",{"property":"og:site_name","content":"Taskiq"}],["meta",{"property":"og:title","content":"Taskiq + FastAPI"}],["meta",{"property":"og:description","content":"Taskiq + FastAPI FastAPI is a highly popular async web framework in Python. It has gained its popularity because of two things: It's easy to use; Cool dependency injection. In t..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-02-05T23:36:31.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-05T23:36:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Taskiq + FastAPI\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-05T23:36:31.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Testing","slug":"testing","link":"#testing","children":[]}],"git":{"createdTime":1707176191000,"updatedTime":1707176191000,"contributors":[{"name":"Pavel Kirilin","email":"win10@list.ru","commits":1}]},"filePathRelative":"framework_integrations/taskiq-with-fastapi.md","localizedDate":"February 5, 2024","autoDesc":true,"excerpt":"\\n<p>FastAPI is a highly popular async web framework in Python. It has gained its popularity because of two things:</p>\\n<ol>\\n<li>It's easy to use;</li>\\n<li>Cool dependency injection.</li>\\n</ol>\\n<p>In taskiq, we try to make our libraries easy to use, and We have a dependency injection too. So we have created the library \\"<a href=\\"https://github.com/taskiq-python/taskiq-fastapi\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">taskiq-fastapi</a>\\" to make integration with FastAPI as smooth as possible.</p>"}`);export{C as comp,D as data};
